//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ./src/MIDL.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="MIDLParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IMIDLVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="MIDLParser.specification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSpecification([NotNull] MIDLParser.SpecificationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MIDLParser.definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDefinition([NotNull] MIDLParser.DefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MIDLParser.module"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitModule([NotNull] MIDLParser.ModuleContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MIDLParser.type_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType_decl([NotNull] MIDLParser.Type_declContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MIDLParser.struct_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStruct_type([NotNull] MIDLParser.Struct_typeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MIDLParser.member_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMember_list([NotNull] MIDLParser.Member_listContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MIDLParser.type_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType_spec([NotNull] MIDLParser.Type_specContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MIDLParser.scoped_name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitScoped_name([NotNull] MIDLParser.Scoped_nameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MIDLParser.base_type_spec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBase_type_spec([NotNull] MIDLParser.Base_type_specContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MIDLParser.floating_pt_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFloating_pt_type([NotNull] MIDLParser.Floating_pt_typeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MIDLParser.integer_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInteger_type([NotNull] MIDLParser.Integer_typeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MIDLParser.signed_int"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSigned_int([NotNull] MIDLParser.Signed_intContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MIDLParser.unsigned_int"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnsigned_int([NotNull] MIDLParser.Unsigned_intContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MIDLParser.declarators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclarators([NotNull] MIDLParser.DeclaratorsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MIDLParser.declarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclarator([NotNull] MIDLParser.DeclaratorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MIDLParser.simple_declarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimple_declarator([NotNull] MIDLParser.Simple_declaratorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MIDLParser.array_declarator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArray_declarator([NotNull] MIDLParser.Array_declaratorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MIDLParser.exp_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExp_list([NotNull] MIDLParser.Exp_listContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MIDLParser.or_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOr_expr([NotNull] MIDLParser.Or_exprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MIDLParser.xor_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitXor_expr([NotNull] MIDLParser.Xor_exprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MIDLParser.and_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAnd_expr([NotNull] MIDLParser.And_exprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MIDLParser.shift_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShift_expr([NotNull] MIDLParser.Shift_exprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MIDLParser.add_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdd_expr([NotNull] MIDLParser.Add_exprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MIDLParser.mult_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMult_expr([NotNull] MIDLParser.Mult_exprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MIDLParser.unary_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnary_expr([NotNull] MIDLParser.Unary_exprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MIDLParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteral([NotNull] MIDLParser.LiteralContext context);
}
